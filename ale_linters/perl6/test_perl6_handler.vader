Before:
  Save g:ale_warn_about_trailing_blank_lines
  Save g:ale_warn_about_trailing_whitespace

  let g:ale_warn_about_trailing_blank_lines = 1
  let g:ale_warn_about_trailing_whitespace = 1

  runtime ale_linters/perl6/perl6.vim

After:
  Restore

  unlet! b:ale_warn_about_trailing_blank_lines
  unlet! b:ale_warn_about_trailing_whitespace

  call ale#linter#Reset()
  silent file something_else.py

Execute(Basic JSON parsing by the handler):
  AssertEqual
  \ [
  \   {
  \     'type': 'E',
  \     'lnum': 3,
  \     'col': 6,
  \     'text': 'Variable ''$Starting'' is not declared',
  \   },
  \ ],
  \ ale_linters#perl6#perl6#Handle(bufnr(''), [
  \ '{',
  \ '  "X::Undeclared" : {',
  \ '    "highexpect" : [ ],',
  \ '    "line" : 3,',
  \ '    "pre" : "say \"",',
  \ '    "filename" : "/tmp/lang-bench.p6",',
  \ '    "suggestions" : [ ],',
  \ '    "is-compile-time" : 1,',
  \ '    "pos" : 27,',
  \ '    "column" : null,',
  \ '    "modules" : [ ],',
  \ '    "symbol" : "$Starting",',
  \ '    "post" : "$Starting calculations...\";",',
  \ '    "what" : "Variable",',
  \ '    "message" : "Variable ''$Starting'' is not declared"',
  \ '  }',
  \ '}',
  \ ])

Execute(Should handle invalid column number):
  AssertEqual
  \ [
  \   {
  \     'type': 'E',
  \     'lnum': v:null,
  \     'col': v:null,
  \     'text': 'Could not find Foo at line 3',
  \   },
  \ ],
  \ ale_linters#perl6#perl6#Handle(bufnr(''), [
  \ '{',
  \ '  "X::CompUnit::UnsatisfiedDependency" : {',
  \ '    "specification" : "Foo",',
  \ '    "message" : "Could not find Foo at line 3"',
  \ '  }',
  \ '}',
  \ ])
